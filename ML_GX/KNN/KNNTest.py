# coding:utf-8# KNN algorithm rewritten by Getfoximport numpy as npimport operatorclass KNN:	def createData(self):		group = np.array([[1.0,1.1],[1.0,1.0],[0,0],[0,0.1]])		labels = ['A','A','B','B']		return(group, labels)	def KnnClassify(self, sample, group, labels, K):		[N, M] = group.shape		#Calculate distance between sample and other group		mid = ((np.tile(sample, (N, 1)) - group)**2)		distance = (np.sum(mid, axis=1))**0.5		Distance = np.argsort(distance)		# Find the K nearest neighbours		vote = {}		for i in range(K):			ith_label = labels[Distance[i]];			vote[ith_label] = vote.get(ith_label,0) + 1		sortedVote = sorted(vote.items(), key = lambda a:a[1], reverse = True)		print("sortedVote:", sortedVote)		return(sortedVote[0][0])K = KNN()group, labels = K.createData()cls = K.KnnClassify([0, 0], group, labels, 3)print("We classify the new word is:", cls)